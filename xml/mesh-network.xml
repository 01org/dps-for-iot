<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="mesh-network" kind="page">
    <compoundname>mesh-network</compoundname>
    <title>Mesh Network</title>
    <tableofcontents/>
    <briefdescription>
<para><linebreak/>
 A DPS network is a loosely connected collection of network nodes (devices) that function as subscriber, publishers, both or neither. </para>    </briefdescription>
    <detaileddescription>
<para><linebreak/>
 A DPS network is a loosely connected collection of network nodes (devices) that function as subscriber, publishers, both or neither.</para><para>Loosely connected means that the nodes hold state information about other nodes but do not necessarily maintain network connectivity to other nodes. There are no predesignated roles, any node can publish topics or subscribe to topics. DPS nodes build and manage routing tables based on the subscription topics and forward publications hop-by-hop from publishers to subscribers. Nodes with multiple network interfaces will automatically route publications between networks. Nodes can send publications on a local subnet using IP multicast, can be manually configured to connect to other nodes, or can use a directory service to locate other nodes. Publication routing is independent from the network level connections, so long as there is at least one network path DPS will route publications to all subscribing nodes.</para><para>The picture below shows a mesh of subscriber and publisher nodes.</para><para><image type="html" name="dps_mesh.jpg">DPS Mesh</image>
 <image type="latex" name="dps_mesh.jpg">DPS Mesh</image>
</para><para>Subscriptions flood throughout the network and can be forwarded in either direction, also there may be multiple routes. Publications only flow on routes that have matching subscriptions. Multicast publications are unsolicited and will be received by all nodes on the same subnet that are configured as multicast listeners. Unicast publications are only forwarded if the publication matches the subscriptions. In the steady state a publication reaching any node will be routed to all matching subscribers.</para><sect1 id="mesh-network_1message-transports">
<title>Transports</title>
<sect2 id="mesh-network_1Multicast">
<title>Multicast</title>
<para>Multicast publications are wrapped in a CoAP envelope and sent to and received from the default CoAP port <emphasis>5683</emphasis>.</para><para>A CoAP wrapped publication message is sent as a non-confirmable PUT request with options:<itemizedlist>
<listitem><para>Uri-Path: <emphasis>dps/pub</emphasis> </para></listitem><listitem><para>Content-Format: <emphasis>application/cbor</emphasis> </para></listitem></itemizedlist>
</para><para>Control over sending and receiving multicast messages is provided via the <emphasis>mcastPub</emphasis> parameter of <ref refid="group__node_1ga160d504bfaeb0d3711e0259000340fe3" kindref="member">DPS_StartNode()</ref>.</para></sect2>
<sect2 id="mesh-network_1Unicast">
<title>Unicast</title>
<para>DPS implements three different transports for sending and receiving unicast messages.</para><para>Unicast endpoints may be explicitly created and destroyed with <ref refid="group__node_1ga5064c63b8ce76bf34402e0c80183234b" kindref="member">DPS_Link()</ref> and <ref refid="group__node_1ga79c86c3c0c5d6438b953a9acaab0ab0b" kindref="member">DPS_Unlink()</ref>. The port used in unicast communication is provided via the <emphasis>listenPort</emphasis> parameter of <ref refid="group__node_1ga160d504bfaeb0d3711e0259000340fe3" kindref="member">DPS_StartNode()</ref>.</para><sect3 id="mesh-network_1UDP">
<title>UDP</title>
<para>Each DPS message is contained in a single UDP datagram.</para></sect3>
<sect3 id="mesh-network_1TCP">
<title>TCP</title>
<para>Each DPS message is prefixed with the length of the message encoded as a CBOR unsigned integer value.</para></sect3>
<sect3 id="mesh-network_1DTLS">
<title>DTLS</title>
<para>DTLS provides message authentication, integrity and confidentiality above UDP. Each DPS message is contained in a single DTLS datagram.</para><para><simplesect kind="see"><para><ref refid="tutorials-security_1enabling-network-layer-security" kindref="member">Enabling network layer security</ref> </para></simplesect>
</para></sect3>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
