<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__registration" kind="group">
    <compoundname>registration</compoundname>
    <title>Registration</title>
    <innerclass refid="struct___d_p_s___registration" prot="public">_DPS_Registration</innerclass>
    <innerclass refid="struct___d_p_s___registration_list" prot="public">_DPS_RegistrationList</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__registration_1gad6b4f95f999e950345587b5ae2de69e2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DPS_OnRegGetComplete) (DPS_RegistrationList *regs, DPS_Status status, void *data)</definition>
        <argsstring>)(DPS_RegistrationList *regs, DPS_Status status, void *data)</argsstring>
        <name>DPS_OnRegGetComplete</name>
        <briefdescription>
<para>Function prototype for callback called when <ref refid="group__registration_1ga7288d76e731feb67b22951d7d1966311" kindref="member">DPS_Registration_Get()</ref> completes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct containing the list of candidate passed in to <ref refid="group__registration_1ga7288d76e731feb67b22951d7d1966311" kindref="member">DPS_Registration_Get()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>DPS_OK if the get completed successfully - the registration list might be empty, </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller supplied data passed into the <ref refid="group__registration_1ga7288d76e731feb67b22951d7d1966311" kindref="member">DPS_Registration_Get()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="142" column="1" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__registration_1gaaa0a8c9235e57aaf3e95dc3ecbf13c53" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DPS_OnRegLinkToComplete) (DPS_Node *node, DPS_RegistrationList *regs, DPS_NodeAddress *addr, DPS_Status status, void *data)</definition>
        <argsstring>)(DPS_Node *node, DPS_RegistrationList *regs, DPS_NodeAddress *addr, DPS_Status status, void *data)</argsstring>
        <name>DPS_OnRegLinkToComplete</name>
        <briefdescription>
<para>Function prototype for callback called when <ref refid="group__registration_1ga73550318aa9625aff612e549e9854e0c" kindref="member">DPS_Registration_LinkTo()</ref> completes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of registrations addresses passed in to <ref refid="group__registration_1ga73550318aa9625aff612e549e9854e0c" kindref="member">DPS_Registration_LinkTo()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address if the remote if status == DPS_OK </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status code indicating success or failure<itemizedlist>
<listitem><para>DPS_OK if a link was successfully established</para></listitem><listitem><para>DPS_ERR_NO_ROUTE if a link could not be established</para></listitem><listitem><para>Other error status codes </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller supplied data passed into the <ref refid="group__registration_1ga73550318aa9625aff612e549e9854e0c" kindref="member">DPS_Registration_LinkTo()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="189" column="1" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__registration_1ga8f1d316de08b7dea7dfe55ae814e0219" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DPS_OnRegPutComplete) (DPS_Status status, void *data)</definition>
        <argsstring>)(DPS_Status status, void *data)</argsstring>
        <name>DPS_OnRegPutComplete</name>
        <briefdescription>
<para>Function prototype for callback called when <ref refid="group__registration_1gac412d38875c80431c558773a42ba0766" kindref="member">DPS_Registration_Put()</ref> completes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status code indicating success or failure<itemizedlist>
<listitem><para>DPS_OK if the registration was made</para></listitem><listitem><para>Other error status codes </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller supplied data passed into the <ref refid="group__registration_1gac412d38875c80431c558773a42ba0766" kindref="member">DPS_Registration_Put()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="104" column="1" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__registration_1gac06db7e10b2626b06bacd09414e7d740" prot="public" static="no">
        <type>struct <ref refid="struct___d_p_s___registration" kindref="compound">_DPS_Registration</ref></type>
        <definition>typedef struct _DPS_Registration  DPS_Registration</definition>
        <argsstring></argsstring>
        <name>DPS_Registration</name>
        <briefdescription>
<para>Registration entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" prot="public" static="no">
        <type>struct <ref refid="struct___d_p_s___registration_list" kindref="compound">_DPS_RegistrationList</ref></type>
        <definition>typedef struct _DPS_RegistrationList  DPS_RegistrationList</definition>
        <argsstring></argsstring>
        <name>DPS_RegistrationList</name>
        <briefdescription>
<para>For returning a list of candidate remote nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="77" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__registration_1ga7c1111f95ed473c1b27fa3c9ee096796" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* DPS_RegistryTopicString</definition>
        <argsstring></argsstring>
        <name>DPS_RegistryTopicString</name>
        <briefdescription>
<para>The registry topic string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="50" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__registration_1ga3d1f2e10a8d3ffd66cf4c3ba5c53b490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
        <definition>DPS_RegistrationList* DPS_CreateRegistrationList</definition>
        <argsstring>(uint8_t size)</argsstring>
        <name>DPS_CreateRegistrationList</name>
        <param>
          <type>uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Create an empty registration list of the specified size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired size of the list</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The newly created registration list or NULL if an error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1ga0dbaa5dbea47290035a11dc22fc45f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DPS_DestroyRegistrationList</definition>
        <argsstring>(DPS_RegistrationList *regs)</argsstring>
        <name>DPS_DestroyRegistrationList</name>
        <param>
          <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
          <declname>regs</declname>
        </param>
        <briefdescription>
<para>Destroy a registration list and free resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>A previously created registration list </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1ga7288d76e731feb67b22951d7d1966311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_Get</definition>
        <argsstring>(DPS_Node *node, const char *host, uint16_t port, const char *tenantString, DPS_RegistrationList *regs, DPS_OnRegGetComplete cb, void *data)</argsstring>
        <name>DPS_Registration_Get</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tenantString</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
          <declname>regs</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1gad6b4f95f999e950345587b5ae2de69e2" kindref="member">DPS_OnRegGetComplete</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Resolve the host and port of a registration service and lookup the addresses registered with that service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host name or IP address to register with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tenantString</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic string identifying the tenant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>Registration list for accumulating the results. The count field must be initialized with the maximum number of registrations to be returned. The candidate list pointer must remain valid until the callback is called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to call with the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller supplied data to be passed to the callback</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK if the registration get request was successfully initiated, otherwise returns an error status and the callback function will not be called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1ga189dc57b265d83d6503f18e953759559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_GetSyn</definition>
        <argsstring>(DPS_Node *node, const char *host, uint16_t port, const char *tenantString, DPS_RegistrationList *regs)</argsstring>
        <name>DPS_Registration_GetSyn</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tenantString</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
          <declname>regs</declname>
        </param>
        <briefdescription>
<para>A synchronous version of DPS_RegistrationGet() this function blocks until the candidate list has been populated or the request times out. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host name or IP address to register with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tenantString</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic string identifying the tenant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>Registration list for accumulating the results.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK if the get request succeeded or and error status for the failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1ga73550318aa9625aff612e549e9854e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_LinkTo</definition>
        <argsstring>(DPS_Node *node, DPS_RegistrationList *regs, DPS_OnRegLinkToComplete cb, void *data)</argsstring>
        <name>DPS_Registration_LinkTo</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
          <declname>regs</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1gaaa0a8c9235e57aaf3e95dc3ecbf13c53" kindref="member">DPS_OnRegLinkToComplete</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Randomly select a remote candidate to link to. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The local node to link </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of candidate registrations to try to link to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to call with the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller supplied data to be passed to the callback</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status code indicating success or failure<itemizedlist>
<listitem><para>DPS_OK if a link is being tried, the success or failure will be reported in the callback</para></listitem><listitem><para>DPS_ERR_NO_ROUTE if no new links can be established</para></listitem><listitem><para>Other error status codes </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1gab50e1fb04be97888ec759b1f0b3df1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_LinkToSyn</definition>
        <argsstring>(DPS_Node *node, DPS_RegistrationList *regs, DPS_NodeAddress *addr)</argsstring>
        <name>DPS_Registration_LinkToSyn</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1ga2b9489ff306ad253d24b03c418a6eda0" kindref="member">DPS_RegistrationList</ref> *</type>
          <declname>regs</declname>
        </param>
        <param>
          <type><ref refid="group__nodeaddress_1ga9e9f56aa38e82b4edcef7eb81e9f5bd2" kindref="member">DPS_NodeAddress</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Synchronous version of Registration_LinkTo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The local node to link </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regs</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of candidate registrations to try to link to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the address of the linked candidate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status code indicating success or failure<itemizedlist>
<listitem><para>DPS_OK if a link was successfully established</para></listitem><listitem><para>DPS_ERR_NO_ROUTE if no new links can be established</para></listitem><listitem><para>Other error status codes </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1gac412d38875c80431c558773a42ba0766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_Put</definition>
        <argsstring>(DPS_Node *node, const char *host, uint16_t port, const char *tenantString, DPS_OnRegPutComplete cb, void *data)</argsstring>
        <name>DPS_Registration_Put</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tenantString</declname>
        </param>
        <param>
          <type><ref refid="group__registration_1ga8f1d316de08b7dea7dfe55ae814e0219" kindref="member">DPS_OnRegPutComplete</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Resolve the host and port of a registration service and register a local node with that service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The local node to register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host name or IP address to register with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tenantString</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic string identifying the tenant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called when the registration completes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller provided data to be passed to the callback function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK if the registration put request was successfully initiated, otherwise returns an error status and the callback function will not be called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__registration_1ga19a9b2743c27769b371c1fc8b97eced1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_Registration_PutSyn</definition>
        <argsstring>(DPS_Node *node, const char *host, uint16_t port, const char *tenantString)</argsstring>
        <name>DPS_Registration_PutSyn</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tenantString</declname>
        </param>
        <briefdescription>
<para>Synchronous version of DPS_RegistrationPut(). </para>        </briefdescription>
        <detaileddescription>
<para>This function blocks until the operations is complete.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The local node to register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host name or IP address to register with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tenantString</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic string identifying the tenant</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK if the put request succeeded or and error status for the failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__registration_1gafde6e5d4cc3e65a94afdd30a689221d5" prot="public" static="no">
        <name>DPS_CANDIDATE_FAILED</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>An attempt to link to a candidate was attempted but failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="56" column="9" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__registration_1gae27a3dfd1f2e746220e99921f2c33a6c" prot="public" static="no">
        <name>DPS_CANDIDATE_INVALID</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>This is a invalid candidate address for linking. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="59" column="9" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__registration_1ga243eb1f49d56c2ae1f542a0c95a5a52d" prot="public" static="no">
        <name>DPS_CANDIDATE_LINKED</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>Registration is currently linked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="57" column="9" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__registration_1ga06a44e56022098c9464bd881cf5efe20" prot="public" static="no">
        <name>DPS_CANDIDATE_TRYING</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>An attempt is being made link to a candidate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="55" column="9" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__registration_1ga0564134dd21bdecf8e8e25cf832e2a38" prot="public" static="no">
        <name>DPS_CANDIDATE_UNLINKED</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>Registration was linked but is currently not linked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" line="58" column="9" bodyfile="/home/tmalsbar/src/github.com/01org/dps-for-iot/inc/dps/registration.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A registration service. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
