<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="group__discovery" kind="group">
    <compoundname>discovery</compoundname>
    <title>Discovery</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__discovery_1ga3f2abf506eb45447bbaa238bd3488d5a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DPS_DiscoveryHandler) (DPS_DiscoveryService *service, const DPS_Publication *pub, uint8_t *payload, size_t len)</definition>
        <argsstring>)(DPS_DiscoveryService *service, const DPS_Publication *pub, uint8_t *payload, size_t len)</argsstring>
        <name>DPS_DiscoveryHandler</name>
        <briefdescription>
<para>Function prototype for a discovery handler called when a discovery message is received. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pub</parametername>
</parameternamelist>
<parameterdescription>
<para>opaque handle for the message that was received </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>payload from the message if any </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the payload </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="91" column="1" bodyfile="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" prot="public" static="no">
        <type>struct _DPS_DiscoveryService</type>
        <definition>typedef struct _DPS_DiscoveryService DPS_DiscoveryService</definition>
        <argsstring></argsstring>
        <name>DPS_DiscoveryService</name>
        <briefdescription>
<para>Opaque type for the discovery service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="88" column="1" bodyfile="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__discovery_1ga1444be5b61355f17773e30a34671feec" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DPS_OnDiscoveryServiceDestroyed) (DPS_DiscoveryService *service, void *data)</definition>
        <argsstring>)(DPS_DiscoveryService *service, void *data)</argsstring>
        <name>DPS_OnDiscoveryServiceDestroyed</name>
        <briefdescription>
<para>Function prototype for callback function called when a service is destroyed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service that was destroyed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data passed to <ref refid="group__discovery_1ga01fdc728b2be4873802669f558151c25" kindref="member">DPS_DestroyDiscoveryService()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="114" column="1" bodyfile="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__discovery_1ga017720f3315915e1e3f10506cb198ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" kindref="member">DPS_DiscoveryService</ref> *</type>
        <definition>DPS_DiscoveryService* DPS_CreateDiscoveryService</definition>
        <argsstring>(DPS_Node *node, const char *serviceId)</argsstring>
        <name>DPS_CreateDiscoveryService</name>
        <param>
          <type><ref refid="group__node_1ga4dd612ab965134321bb57fdb065f121c" kindref="member">DPS_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>serviceId</declname>
        </param>
        <briefdescription>
<para>Allocate resources for a discovery service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serviceId</parametername>
</parameternamelist>
<parameterdescription>
<para>an application-defined topic segment for discovery information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the service, or NULL if creation failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__discovery_1ga01fdc728b2be4873802669f558151c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_DestroyDiscoveryService</definition>
        <argsstring>(DPS_DiscoveryService *service, DPS_OnDiscoveryServiceDestroyed cb, void *data)</argsstring>
        <name>DPS_DestroyDiscoveryService</name>
        <param>
          <type><ref refid="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" kindref="member">DPS_DiscoveryService</ref> *</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="group__discovery_1ga1444be5b61355f17773e30a34671feec" kindref="member">DPS_OnDiscoveryServiceDestroyed</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Free resources for a discovery service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to be called when the service is destroyed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be passed to the callback function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>DPS_OK if the service will be destroyed and the callback called</para></listitem><listitem><para>DPS_ERR_NULL service or cb was null</para></listitem><listitem><para>Or an error status code in which case the callback will not be called. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__discovery_1ga8719df7666aeacf84ffdb812190d28fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_DiscoveryPublish</definition>
        <argsstring>(DPS_DiscoveryService *service, const uint8_t *payload, size_t len, DPS_DiscoveryHandler handler)</argsstring>
        <name>DPS_DiscoveryPublish</name>
        <param>
          <type><ref refid="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" kindref="member">DPS_DiscoveryService</ref> *</type>
          <declname>service</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="group__discovery_1ga3f2abf506eb45447bbaa238bd3488d5a" kindref="member">DPS_DiscoveryHandler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Publish this node&apos;s discovery information and receive other node&apos;s discovery information. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>optional payload </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the payload </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>optional callback function to be called when a discovery message is received</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK if successful, an error otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__discovery_1ga9328a07fefe871f52485a4ab43c175e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DPS_GetDiscoveryServiceData</definition>
        <argsstring>(DPS_DiscoveryService *service)</argsstring>
        <name>DPS_GetDiscoveryServiceData</name>
        <param>
          <type><ref refid="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" kindref="member">DPS_DiscoveryService</ref> *</type>
          <declname>service</declname>
        </param>
        <briefdescription>
<para>Get application data pointer previously set by <ref refid="group__discovery_1ga2ee07d7ca7e77f9dea196bbfeb20ce09" kindref="member">DPS_SetDiscoveryServiceData()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the data or NULL if the service is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__discovery_1ga2ee07d7ca7e77f9dea196bbfeb20ce09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__status_1ga30395a84d3cad9d4ec29848106415038" kindref="member">DPS_Status</ref></type>
        <definition>DPS_Status DPS_SetDiscoveryServiceData</definition>
        <argsstring>(DPS_DiscoveryService *service, void *data)</argsstring>
        <name>DPS_SetDiscoveryServiceData</name>
        <param>
          <type><ref refid="group__discovery_1ga4a4ddabf7fbcb691450170bbfdc5f117" kindref="member">DPS_DiscoveryService</ref> *</type>
          <declname>service</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Store a pointer to application data in a discovery service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service</parametername>
</parameternamelist>
<parameterdescription>
<para>the service </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer to store</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DPS_OK or an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tmalsbar/src/github.com/intel/dps-for-iot/inc/dps/discovery.h" line="72" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A discovery service. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
